version: '3.8'

services:
  # Aplicación principal
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    image: s8devops.azurecr.io/demo/S8DevOps-app:latest
    container_name: S8DevOps-devops-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Proxy Nginx para load balancing
  nginx:
    image: nginx:alpine
    container_name: S8DevOps-nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/html:/usr/share/nginx/html:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - app-network

  # Base de datos Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: S8DevOps-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - app-network
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

# Redes
networks:
  app-network:
    driver: bridge

# Volúmenes persistentes
volumes:
  redis-data:
    driver: local
